/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    users: User;
    media: Media;
    articles: Article;
    'collection-pages': CollectionPage;
    news: News;
    references: Reference;
    categories: Category;
    contacts: Contact;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    articles: ArticlesSelect<false> | ArticlesSelect<true>;
    'collection-pages': CollectionPagesSelect<false> | CollectionPagesSelect<true>;
    news: NewsSelect<false> | NewsSelect<true>;
    references: ReferencesSelect<false> | ReferencesSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    contacts: ContactsSelect<false> | ContactsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    'front-page': FrontPage;
    'main-menu': MainMenu;
  };
  globalsSelect: {
    'front-page': FrontPageSelect<false> | FrontPageSelect<true>;
    'main-menu': MainMenuSelect<false> | MainMenuSelect<true>;
  };
  locale: 'fi' | 'en';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  'alt en'?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "articles".
 */
export interface Article {
  id: string;
  title: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  featuredImage?: (string | null) | Media;
  author: string | User;
  publishedDate: string;
  slug: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "collection-pages".
 */
export interface CollectionPage {
  id: string;
  title: string;
  heroText?: string | null;
  heroImage?: (string | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  slug: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "news".
 */
export interface News {
  id: string;
  title: string;
  heroText?: string | null;
  heroImage?: (string | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  slug: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "references".
 */
export interface Reference {
  id: string;
  title: string;
  heroText?: string | null;
  heroImage?: (string | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  slug: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  label: string;
  slug: string;
  parent?: (string | null) | Category;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contacts".
 */
export interface Contact {
  id: string;
  name: string;
  title?: string | null;
  email: string;
  phone?: string | null;
  image?: (string | null) | Media;
  categories?: (string | Category)[] | null;
  order?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'articles';
        value: string | Article;
      } | null)
    | ({
        relationTo: 'collection-pages';
        value: string | CollectionPage;
      } | null)
    | ({
        relationTo: 'news';
        value: string | News;
      } | null)
    | ({
        relationTo: 'references';
        value: string | Reference;
      } | null)
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'contacts';
        value: string | Contact;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  'alt en'?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "articles_select".
 */
export interface ArticlesSelect<T extends boolean = true> {
  title?: T;
  content?: T;
  featuredImage?: T;
  author?: T;
  publishedDate?: T;
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "collection-pages_select".
 */
export interface CollectionPagesSelect<T extends boolean = true> {
  title?: T;
  heroText?: T;
  heroImage?: T;
  content?: T;
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "news_select".
 */
export interface NewsSelect<T extends boolean = true> {
  title?: T;
  heroText?: T;
  heroImage?: T;
  content?: T;
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "references_select".
 */
export interface ReferencesSelect<T extends boolean = true> {
  title?: T;
  heroText?: T;
  heroImage?: T;
  content?: T;
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  label?: T;
  slug?: T;
  parent?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contacts_select".
 */
export interface ContactsSelect<T extends boolean = true> {
  name?: T;
  title?: T;
  email?: T;
  phone?: T;
  image?: T;
  categories?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "front-page".
 */
export interface FrontPage {
  id: string;
  content: (
    | {
        title: string;
        text?: string | null;
        buttonText: string;
        link: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'callToAction';
      }
    | {
        title: string;
        text?: string | null;
        buttonText: string;
        url: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'investorsInfo';
      }
    | {
        posts: {
          title: string;
          text?: string | null;
          link?: string | null;
          image: string | Media;
          buttonText?: string | null;
          video?: string | null;
          id?: string | null;
          blockName?: string | null;
          blockType: 'largeFeaturePost';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'largeFeaturePostsWrapper';
      }
    | {
        posts: {
          title: string;
          text?: string | null;
          link?: string | null;
          image: string | Media;
          id?: string | null;
          blockName?: string | null;
          blockType: 'smallFeaturePost';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'smallFeaturePostsWrapper';
      }
    | {
        links?:
          | {
              title: string;
              isExternal?: boolean | null;
              internalUrl?: {
                relationTo: 'articles';
                value: string | Article;
              } | null;
              externalUrl?: string | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'linkList';
      }
    | {
        contacts: (string | User)[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'contactPeople';
      }
    | {
        title: string;
        description?: string | null;
        youtubeId: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'videoEmbed';
      }
    | {
        media: string | Media;
        caption?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'media';
      }
  )[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "main-menu".
 */
export interface MainMenu {
  id: string;
  items: {
    label: string;
    onlyLabel?: boolean | null;
    link?: {
      isExternal?: boolean | null;
      internalUrl?:
        | ({
            relationTo: 'articles';
            value: string | Article;
          } | null)
        | ({
            relationTo: 'collection-pages';
            value: string | CollectionPage;
          } | null)
        | ({
            relationTo: 'news';
            value: string | News;
          } | null)
        | ({
            relationTo: 'references';
            value: string | Reference;
          } | null);
      externalUrl?: string | null;
    };
    children?:
      | {
          label: string;
          link?: {
            isExternal?: boolean | null;
            internalUrl?:
              | ({
                  relationTo: 'articles';
                  value: string | Article;
                } | null)
              | ({
                  relationTo: 'collection-pages';
                  value: string | CollectionPage;
                } | null)
              | ({
                  relationTo: 'news';
                  value: string | News;
                } | null)
              | ({
                  relationTo: 'references';
                  value: string | Reference;
                } | null);
            externalUrl?: string | null;
          };
          id?: string | null;
        }[]
      | null;
    id?: string | null;
  }[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "front-page_select".
 */
export interface FrontPageSelect<T extends boolean = true> {
  content?:
    | T
    | {
        callToAction?:
          | T
          | {
              title?: T;
              text?: T;
              buttonText?: T;
              link?: T;
              id?: T;
              blockName?: T;
            };
        investorsInfo?:
          | T
          | {
              title?: T;
              text?: T;
              buttonText?: T;
              url?: T;
              id?: T;
              blockName?: T;
            };
        largeFeaturePostsWrapper?:
          | T
          | {
              posts?:
                | T
                | {
                    largeFeaturePost?:
                      | T
                      | {
                          title?: T;
                          text?: T;
                          link?: T;
                          image?: T;
                          buttonText?: T;
                          video?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        smallFeaturePostsWrapper?:
          | T
          | {
              posts?:
                | T
                | {
                    smallFeaturePost?:
                      | T
                      | {
                          title?: T;
                          text?: T;
                          link?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        linkList?:
          | T
          | {
              links?:
                | T
                | {
                    title?: T;
                    isExternal?: T;
                    internalUrl?: T;
                    externalUrl?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        contactPeople?:
          | T
          | {
              contacts?: T;
              id?: T;
              blockName?: T;
            };
        videoEmbed?:
          | T
          | {
              title?: T;
              description?: T;
              youtubeId?: T;
              id?: T;
              blockName?: T;
            };
        media?:
          | T
          | {
              media?: T;
              caption?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "main-menu_select".
 */
export interface MainMenuSelect<T extends boolean = true> {
  items?:
    | T
    | {
        label?: T;
        onlyLabel?: T;
        link?:
          | T
          | {
              isExternal?: T;
              internalUrl?: T;
              externalUrl?: T;
            };
        children?:
          | T
          | {
              label?: T;
              link?:
                | T
                | {
                    isExternal?: T;
                    internalUrl?: T;
                    externalUrl?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}